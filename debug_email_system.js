// ========================================
// SCRIPT DE DIAGNOSTIC EMAIL SYSTEM
// ========================================
// Ce script teste le syst√®me d'email complet

const { createClient } = require('@supabase/supabase-js');

// Configuration (√† adapter selon votre environnement)
const SUPABASE_URL = process.env.VITE_SUPABASE_URL || 'https://votre-projet.supabase.co';
const SUPABASE_ANON_KEY = process.env.VITE_SUPABASE_ANON_KEY || 'votre_anon_key';

const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);

async function testEmailSystem() {
  console.log('üß™ ===== DIAGNOSTIC EMAIL SYSTEM =====');
  console.log('üìß URL Supabase:', SUPABASE_URL);
  console.log('üîë Cl√© anonyme:', SUPABASE_ANON_KEY.substring(0, 20) + '...');
  console.log('‚è∞ Timestamp:', new Date().toISOString());
  console.log('');

  try {
    // 1. Test de connexion Supabase
    console.log('1Ô∏è‚É£ Test de connexion Supabase...');
    const { data: profiles, error: profilesError } = await supabase
      .from('profiles')
      .select('id, role')
      .limit(1);

    if (profilesError) {
      console.error('‚ùå Erreur connexion Supabase:', profilesError.message);
      return;
    }
    console.log('‚úÖ Connexion Supabase OK');

    // 2. Test de l'Edge Function send-email-reliable
    console.log('');
    console.log('2Ô∏è‚É£ Test Edge Function send-email-reliable...');
    
    const testEmailData = {
      client_email: 'test@example.com',
      client_name: 'Test User',
      invitation_url: 'https://byw.app/?token=test-token-123',
      coach_name: 'Coach Test',
      type: 'client_invitation'
    };

    console.log('üì¶ Donn√©es de test:', JSON.stringify(testEmailData, null, 2));

    const { data: emailResult, error: emailError } = await supabase.functions.invoke('send-email-reliable', {
      body: testEmailData
    });

    if (emailError) {
      console.error('‚ùå Erreur Edge Function:', emailError);
    } else {
      console.log('‚úÖ Edge Function r√©pond:', JSON.stringify(emailResult, null, 2));
    }

    // 3. Test de cr√©ation d'invitation
    console.log('');
    console.log('3Ô∏è‚É£ Test cr√©ation invitation...');
    
    const invitationData = {
      coach_id: 'test-coach-id',
      client_email: 'test@example.com',
      client_first_name: 'Test',
      client_last_name: 'User',
      client_phone: '+33123456789',
      client_primary_goal: 'general_fitness',
      client_fitness_level: 'beginner'
    };

    // Note: Ceci n√©cessitera une vraie table client_invitations
    console.log('üìù Donn√©es invitation:', JSON.stringify(invitationData, null, 2));
    console.log('‚ö†Ô∏è Note: La cr√©ation d\'invitation n√©cessite une table client_invitations');

    // 4. V√©rification des variables d'environnement
    console.log('');
    console.log('4Ô∏è‚É£ V√©rification variables d\'environnement...');
    
    const requiredVars = [
      'VITE_SUPABASE_URL',
      'VITE_SUPABASE_ANON_KEY',
      'RESEND_API_KEY',
      'FROM_EMAIL',
      'BASE_URL'
    ];

    requiredVars.forEach(varName => {
      const value = process.env[varName];
      if (value) {
        console.log(`‚úÖ ${varName}: ${value.substring(0, 20)}...`);
      } else {
        console.log(`‚ùå ${varName}: NON D√âFINI`);
      }
    });

    console.log('');
    console.log('üéØ ===== R√âSUM√â DU DIAGNOSTIC =====');
    console.log('‚úÖ Connexion Supabase: OK');
    console.log(emailError ? '‚ùå Edge Function: ERREUR' : '‚úÖ Edge Function: OK');
    console.log('‚ö†Ô∏è Variables d\'environnement: V√©rifiez ci-dessus');
    console.log('');
    console.log('üí° PROCHAINES √âTAPES:');
    console.log('1. Configurez les variables d\'environnement manquantes');
    console.log('2. D√©ployez l\'Edge Function send-email-reliable');
    console.log('3. Testez avec un vrai email');
    console.log('4. V√©rifiez les logs Supabase');

  } catch (error) {
    console.error('‚ùå Erreur g√©n√©rale:', error);
  }
}

// Ex√©cuter le diagnostic
testEmailSystem().catch(console.error);
